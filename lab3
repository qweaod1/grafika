from PIL import Image
import numpy as np


def rysuj_ramke_szare(w, h, grub, kolor_ramki, kolor):  # kolor od 0 do 255
    t = (h, w)
    tab = np.ones(t, dtype=np.uint8)
    for j in range(int(min(w, h) / grub)):
        if j % 2 == 0:
            tab[j * grub:h - j * grub, j * grub:w - j * grub] = kolor_ramki
        else:
            tab[j * grub:h - j * grub, j * grub:w - j * grub] = kolor
    return Image.fromarray(tab)


im_ramka2 = rysuj_ramke_szare(120, 60, 6, 100, 200)
im_ramka2.show()

im_ramka2.save("obraz1_1.jpg")
im_ramka2.save("obraz1_1.png")


def rysuj_pasy_pionowe_szare(w, h, grub, zmiana_koloru):
    t = (h, w)
    tab = np.ones(t, dtype=np.uint8)

    ile = int(w / grub)
    for k in range(ile):
        for g in range(grub):
            i = k * grub + g
            for j in range(h):
                tab[j, i] = (k * zmiana_koloru) % 256
    return Image.fromarray(tab)


obraz = rysuj_pasy_pionowe_szare(180, 100, 30, 20)
obraz.show()

obraz.save("obraz1_2.jpg")
obraz.save("obraz1_2.png")


def rysuj_ramki_kolorowe(w, zmiana_koloru_r, zmiana_koloru_g, zmiana_koloru_b):
    t = (w, w, 3)
    tab = np.zeros(t, dtype=np.uint8)
    kolor_r = 6
    kolor_g = 4
    kolor_b = 2
    z = w
    for k in range(int(w / 2)):
        for i in range(k, z - k):
            for j in range(k, z - k):
                tab[i, j] = [kolor_r, kolor_g, kolor_b]
        kolor_r = (kolor_r - zmiana_koloru_r) % 256
        kolor_g = (kolor_g - zmiana_koloru_g) % 256
        kolor_b = (kolor_b - zmiana_koloru_b) % 256
    return tab


tab = rysuj_ramki_kolorowe(200, 2, 4, 6)
obraz3 = Image.fromarray(tab)
obraz3.show()


def negatyw_szare(obraz):
    tab = np.asarray(obraz)
    h, w = tab.shape
    tab_neg = tab.copy()
    for i in range(h):
        for j in range(w):
            tab_neg[i, j] = 255 - tab[i, j]
    return tab_neg


def negatyw_kolor(obraz):
    tab = np.asarray(obraz)
    h, w, c = tab.shape  # Get height, width, and number of color channels
    tab_neg = tab.copy()

    for i in range(h):
        for j in range(w):
            for k in range(c):  # Loop through color channels
                tab_neg[i, j, k] = 255 - tab[i, j, k]

    return tab_neg


tab_neg = negatyw_szare(obraz)
obraz_neg = Image.fromarray(tab_neg)
obraz_neg.show()
obraz_neg.save("obraz1_2N.jpg")
obraz_neg.save("obraz1_2N.png")

tab_neg = negatyw_szare(im_ramka2)
obraz_neg = Image.fromarray(tab_neg)
obraz_neg.show()
obraz_neg.save("obraz1_1N.jpg")
obraz_neg.save("obraz1_1N.png")


def rysuj_pasy_pionowe_3kolory(w, h, grub):
    t = (h, w, 3)
    tab = np.ones(t, dtype=np.uint8)
    ile = int(w / grub)

    for k in range(ile):
        for g in range(grub):
            i = k * grub + g
            for j in range(h):
                if k % 3 == 0:
                    tab[j, i] = [255, 0, 0]
                elif k % 3 == 1:
                    tab[j, i] = [0, 255, 0]
                else:
                    tab[j, i] = [0, 0, 255]

    return tab


tab1 = rysuj_pasy_pionowe_3kolory(200, 100, 10)
obraz1 = Image.fromarray(tab1)
obraz1.show()

obra = negatyw_kolor(tab)
obra1 = Image.fromarray(obra)
obra1.show()


def koloruj_obraz(obraz, grub):
    t_obraz = np.asarray(obraz)
    h, w = t_obraz.shape
    t =(h, w, 3)
    tab = np.ones(t, dtype=np.uint8)
    for i in range(h):
        for j in range(w):
            if t_obraz[i, j] == False:
                if i % 2 == 0:
                    tab[i, j] = [66, 5, 23]
                else:
                    tab[i, j] = [66, 111, 88]
            else:
                tab[i, j] = [255, 255, 255]
    return tab


gwiazdka = Image.open("inicjaly.bmp")
obraz2 = Image.fromarray(koloruj_obraz(gwiazdka, 5))
obraz2.show()
